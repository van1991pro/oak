name: Golang node enigne artifacts

on:
  push:
    tags:
      - 'v*.*.*'
      - 'alpha-v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Use Go 1.23.0
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.0

      - name: Build NodeEngine ({{ matrix.architecture }})
        run: |
          cd go_node_engine
          env GOOS=linux GOARCH=${{ matrix.architecture }}  go build -ldflags="-X 'go_node_engine/cmd.Version=${{ github.ref_name }}'" -o ../NodeEngine NodeEngine.go
          env GOOS=linux GOARCH=${{ matrix.architecture }}  go build -o ../nodeengined internal/daemon/nodeengined.go

      - name: Package Artifacts
        run: |
          mkdir -p NodeEngine_folder_${{ matrix.architecture }}
          cp NodeEngine nodeengined go_node_engine/build/install.sh go_node_engine/build/configure-gpu.sh go_node_engine/nodeengine.service NodeEngine_folder_${{ matrix.architecture }}
          tar -czvf NodeEngine_${{ matrix.architecture }}.tar.gz -C NodeEngine_folder_${{ matrix.architecture }} .

      - name: Release Artifacts
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.PACKAGES_TOKEN }}
          fail_on_unmatched_files: true
          generate_release_notes: true
          append_body: true
          prerelease: true
          files: |
            NodeEngine_${{ matrix.architecture }}.tar.gz


