# https://grafana.com/docs/loki/latest/clients/promtail/configuration/
# https://docs.docker.com/engine/api/v1.41/#operation/ContainerList
# Evaluate use of `match` pipeline stage for annidated logs format
# https://grafana.com/docs/loki/latest/send-data/promtail/stages/match/
server:
  http_listen_port: 9080
  grpc_listen_port: 0
  enable_runtime_reload: true

positions:
  filename: /tmp/positions.yaml


#limits_config:
#  reject_old_samples: false

clients:
- url: http://loki:3100/loki/api/v1/push

scrape_configs:
- job_name: root_logs_scraper
  docker_sd_configs:
  - host: unix:///var/run/docker.sock
    refresh_interval: 5s
    filters:
    - name: label
      values: ["logging=promtail"]
  relabel_configs:
  - source_labels: ['__meta_docker_container_id']
    target_label: 'container_id'
  - source_labels: ['__meta_docker_network_ip']
    target_label: 'container_ip'
  - source_labels: ['__meta_docker_container_name']
    regex: '/(.*)'
    target_label: 'container_name'
  - source_labels: ['__meta_docker_container_log_stream']
    target_label: 'logstream'
  - source_labels: ['__meta_docker_container_label_logging_jobname']
    target_label: 'job'

  pipeline_stages:
  - json:
       expressions:
         level: level
         service: service
         filename: filename
  - regex: #Regex for root system manager log format
      expression: '(?P<level>[^\[\]]+?)(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) (?P<service>[^:]+) (?P<file>[^:]+):(?P<line>\d+)\] (?P<message>.+)'
  - labels:
      level: level
      service: service
      file: line



        


#reject_old_samples_max_age: 168h
